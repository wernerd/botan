
# (C) 2020 Jack Lloyd
# Botan is released under the Simplified BSD License (see license.txt)

name: ci

permissions:
  contents: read
  # implicitly all other scopes not listed become none

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# cancel running workflows when new commits are being pushed in pull requests
# but not on the master branch
concurrency:
  group: ${{ github.workflow }} @ ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ${{ matrix.host_os }}

    env:
      ANDROID_NDK: android-ndk-r21d

    strategy:
      fail-fast: false

      matrix:
        include:
          - target: coverage
            compiler: gcc
            host_os: ubuntu-20.04
          - target: shared
            compiler: gcc
            host_os: ubuntu-20.04
          - target: shared
            compiler: clang
            host_os: ubuntu-20.04
          - target: valgrind
            compiler: gcc
            host_os: ubuntu-20.04
          - target: fuzzers
            compiler: gcc
            host_os: ubuntu-20.04
          - target: cross-i386
            compiler: gcc
            host_os: ubuntu-20.04
          - target: cross-arm64
            compiler: gcc
            host_os: ubuntu-20.04
          - target: cross-ppc64
            compiler: gcc
            host_os: ubuntu-20.04
          - target: cross-android-arm32
            compiler: clang
            host_os: ubuntu-20.04
          - target: cross-android-arm64
            compiler: clang
            host_os: ubuntu-20.04
          - target: cross-win64
            compiler: gcc
            host_os: ubuntu-20.04
          - target: amalgamation
            compiler: gcc
            host_os: ubuntu-20.04
          - target: emscripten
            compiler: emcc
            host_os: macos-latest
          - target: baremetal
            compiler: gcc
            host_os: ubuntu-20.04
          - target: minimized
            compiler: gcc
            host_os: ubuntu-20.04
          - target: bsi
            compiler: gcc
            host_os: ubuntu-20.04
          - target: lint
            compiler: gcc
            host_os: ubuntu-20.04
          - target: shared
            compiler: clang
            host_os: macos-latest
          - target: cross-ios-arm64
            compiler: clang
            host_os: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Build Agent (Unix-like)
        run: ./src/scripts/ci/setup_gh_actions.sh ${{ matrix.target }}

      - name: Check Availability of Compiler Cache
        run: echo "::warning ::No compiler cache available, build times might suffer"
        if: env.COMPILER_CACHE_LOCATION == ''
      - uses: actions/cache@v2
        if: env.COMPILER_CACHE_LOCATION != ''
        with:
            path: ${{ env.COMPILER_CACHE_LOCATION }}
            key: ${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.target }}-${{ github.run_id }}
            restore-keys: ${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.target }}-
      - run: ./src/scripts/ci_build.py --cc '${{ matrix.compiler }}' ${{ matrix.target }}
